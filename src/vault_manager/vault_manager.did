type Conf = record {
    destination_address : text;
    initial_cycles_balance : nat;
    origins : vec text;
    repo_canister_id : text;
    payment_cycles : nat64;
};

type CreateResult = record {
    canister_id : principal
};

type Result = variant {
    Ok : CreateResult;
    Err : text
};

type Result_1 = variant {
    Ok;
    Err : text
};

type VaultCanister = record {
    initiator : principal;
    canister_id : principal;
    block_number : nat64;
};service : (Conf) -> {
    canister_balance : () -> (nat64) query;
    create_canister_call : (nat64) -> (Result);
    get_all_canisters : () -> (vec VaultCanister) query;
    update_canister_self : (text) -> (Result_1);
}